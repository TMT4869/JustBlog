@using FA.JustBlog.Core.Models.ViewModels
@using FA.JustBlog.CustomHelper
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.WebUtilities
@using X.PagedList
@using X.PagedList.Mvc.Core
@using FA.JustBlog.Core.Models
@model IPagedList<PostVM>
@* @model IPagedList<Post> *@

@{
    var viewed = ViewBag.MostViewedPosts as List<PostVM>;
    var latest = ViewBag.SortByLatest as List<PostVM>;
    var popularTags = ViewBag.PopularTags as List<TagVM>;
    var availableTags = ViewBag.AvailableTags as List<TagVM>;
    var route = Context.Request.RouteValues;
    var query = Context.Request.Query;
    var path = Context.Request.Path.ToString();
}

<!-- Page Header-->
<header class="masthead"
        style="background-image: url('@Url.Content("~/assets/img/home-bg.jpg")')">
    <div class="container position-relative px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                <div class="site-heading">
                    <h1>Just Blog</h1>
                    <span class="subheading">The Blog is written by Nguyen Hao</span>
                </div>
            </div>
        </div>
    </div>
</header>
<!-- Main Content-->
<div class="container px-4 px-lg-5">
    <div class="row gx-4 gx-lg-5 justify-content-center">
        <div class="col-md-10 col-lg-8 col-xl-7">
            <h1>@ViewBag.Title</h1>
            <hr class="my-4">
            <!-- Post preview-->
            @foreach (var item in Model)
            {
                <div class="post-preview">
                    <a href="@Url.Action("Details", "Post", new
                            {
                                year = item.PostedOn.Year,
                                month = item.PostedOn.Month.ToString("00"),
                                title = item.UrlSlug
                            })">
                        <h2 class="post-title">
                            @item.Title
                        </h2>
                        <h3 class="post-subtitle">
                            @item.ShortDescription
                        </h3>
                    </a>
                    <p class="post-meta">
                        Posted on
                        @{
                            var postedOn = item.PostedOn.ToFriendlyDate();
                        }
                        <span>@postedOn</span>
                        with rate @Math.Round(item.Rate, 2) <i class="fa-solid fa-star"></i> by @item.ViewCount view(s)
                    </p>
                    <div class="categorylink mb-1">
                        Category @Html.CategoryLink($"/Post/Category?name={item.CategoryName}", item.CategoryName)
                    </div>
                    <div class="taglink post-meta">
                        Tag:  @foreach (var tag in availableTags)
                        {
                            if (item.PostTagMaps.Any(x => x.TagId == tag.Id))
                            {
                                <span>@Html.TagLink($"/Post/Tag?name={tag.Name}", tag.Name)</span>
                            }
                        }
                    </div>
                </div>
                <!-- Divider-->
                <hr class="my-4" />
            }

            <!-- Pager-->
            @if (ViewBag.TotalItems > 0)
            {
            <div class="d-flex justify-content-between">
                @Html.PagedListPager(Model, page =>
                {
                    var routeValues = new RouteValueDictionary(route);
                    var queryDict = query.ToDictionary(kvp => kvp.Key, kvp => kvp.Value.ToString());
                    queryDict["page"] = page.ToString();
                    var queryString = QueryHelpers.AddQueryString(Url.Action(route["action"].ToString(), routeValues), queryDict);
                    return queryString;
                },
                new PagedListRenderOptions
                {
                    LiElementClasses = new string[] { "page-item" },
                    PageClasses = new string[] { "page-link" },
                    UlElementClasses = new string[] { "pagination" },
                    DisplayEllipsesWhenNotShowingAllPageNumbers = false,
                    DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                    DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                    DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
                    DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded
                })

                <form method="post" action="@Url.Action("SetPageSize", "Post")" class="ms-auto">
                    <input type="hidden" name="currentPage" value="@Model.PageNumber" />
                    <input type="hidden" name="totalItems" value="@ViewBag.TotalItems" />
                    <input type="hidden" name="currentUrl" value="@Context.Request.Scheme://@Context.Request.Host@Context.Request.Path@Context.Request.QueryString" />
                    <select aria-label="PageSize" id="pageSize" name="pageSize" onchange="this.form.submit()" class="form-select">
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="5">5</option>
                        <option value="10">10</option>
                        <option value="15">15</option>
                        <option value="20">20</option>
                    </select>
                </form>
            </div>
            }

        </div>
        @if (latest != null)
        {
            <div class="col-md-2 col-lg-4 col-xl-4">
                <partial name="~/Views/Home/_PartialAboutCard.cshtml" />
                <div class="mt-3">
                    <h3>Most Viewed Post</h3>
                    <partial name="~/Views/Post/_ListPosts.cshtml" model="viewed" />
                </div>
                <div class="mt-3">
                    <h3>Latest Posts</h3>
                    <partial name="~/Views/Post/_ListPosts.cshtml" model="latest" />
                </div>
                <partial name="~/Views/Tag/_PopularTags.cshtml" model="popularTags" />
            </div>
        }
    </div>
</div>
<script src="~/js/scripts.js"></script>
<script>
    document.getElementById('pageSize').value = '@Model.PageSize';
    if (window.location.href.includes("Category")) {
        var categoryLinks = document.querySelectorAll(".categorylink");
        categoryLinks.forEach(function (categoryLink) {
            categoryLink.remove();
        });
    }
    if (window.location.href.includes("Tag")) {
        var tagLinks = document.querySelectorAll(".taglink");
        tagLinks.forEach(function (tagLink) {
            tagLink.remove();
        });
    }
</script>